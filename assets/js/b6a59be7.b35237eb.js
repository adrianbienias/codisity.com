"use strict";(self.webpackChunkcodisity_com=self.webpackChunkcodisity_com||[]).push([[9442],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),m=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=m(e.components);return r.createElement(l.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),p=m(n),d=a,f=p["".concat(l,".").concat(d)]||p[d]||u[d]||i;return n?r.createElement(f,o(o({ref:t},s),{},{components:n})):r.createElement(f,o({ref:t},s))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[p]="string"==typeof e?e:a,o[1]=c;for(var m=2;m<i;m++)o[m]=n[m];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3037:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>m});var r=n(7462),a=(n(7294),n(3905));const i={tags:["CLI"]},o="Command line interface",c={unversionedId:"backend/command-line-interface/index",id:"backend/command-line-interface/index",title:"Command line interface",description:"Links",source:"@site/docs/040-backend/020-command-line-interface/index.mdx",sourceDirName:"040-backend/020-command-line-interface",slug:"/backend/command-line-interface/",permalink:"/backend/command-line-interface/",draft:!1,editUrl:"https://github.com/adrianbienias/codisity.com/blob/main/docs/040-backend/020-command-line-interface/index.mdx",tags:[{label:"CLI",permalink:"/tags/cli"}],version:"current",frontMatter:{tags:["CLI"]},sidebar:"backendSidebar",previous:{title:"Node.js",permalink:"/backend/node-js/"},next:{title:"Backend API",permalink:"/backend/backend-api/"}},l={},m=[{value:"Links",id:"links",level:2}],s={toc:m},p="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"command-line-interface"},"Command line interface"),(0,a.kt)("h2",{id:"links"},"Links"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Command-line_interface"},"Command-line interface - Wikipedia")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://onceupon.github.io/Bash-Oneliner/"},"Bash-Oneliner | A collection of handy Bash One-Liners and terminal tricks for data processing and Linux system maintenance.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://charm.sh/libs/"},"Charm")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/chalk/chalk"},"chalk/chalk: \ud83d\udd8d Terminal string styling done right")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/charmbracelet/gum"},"charmbracelet/gum: A tool for glamorous shell scripts \ud83c\udf80")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/infinitered/gluegun?ck_subscriber_id=192963084"},"infinitered/gluegun: A delightful toolkit for building TypeScript-powered command-line apps.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/junegunn/fzf"},"junegunn/fzf: \ud83c\udf38 A command-line fuzzy finder")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/barthr/redo"},"barthr/redo: Redo is the ultimate tool to create reusable functions from your history in an interactive way")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/nexe/nexe"},"nexe/nexe: \ud83c\udf89 create a single executable out of your node.js apps")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/andreafrancia/trash-cli/"},"andreafrancia/trash-cli: Command line interface to the freedesktop.org trashcan.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/tj/commander.js"},"tj/commander.js: node.js command-line interfaces made easy"))))}u.isMDXComponent=!0}}]);