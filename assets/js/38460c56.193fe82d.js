"use strict";(self.webpackChunkcodisity_com=self.webpackChunkcodisity_com||[]).push([[5797],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>k});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(n),m=i,k=u["".concat(l,".").concat(m)]||u[m]||d[m]||o;return n?a.createElement(k,r(r({ref:t},c),{},{components:n})):a.createElement(k,r({ref:t},c))}));function k(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,r=new Array(o);r[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:i,r[1]=s;for(var p=2;p<o;p++)r[p]=n[p];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9643:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var a=n(7462),i=(n(7294),n(3905));const o={tags:["CI","CD"]},r="Continuous integration and deployment",s={unversionedId:"backend/continuous-integration-and-deployment/index",id:"backend/continuous-integration-and-deployment/index",title:"Continuous integration and deployment",description:"Continuous Integration (CI) and Continuous Deployment (CD) are two closely related practices in software development that aim to improve the quality, speed, and reliability of delivering software updates. They involve automation, collaboration, and the frequent integration and delivery of code changes. Here's an explanation of both concepts:",source:"@site/docs/040-backend/080-continuous-integration-and-deployment/index.mdx",sourceDirName:"040-backend/080-continuous-integration-and-deployment",slug:"/backend/continuous-integration-and-deployment/",permalink:"/backend/continuous-integration-and-deployment/",draft:!1,editUrl:"https://github.com/adrianbienias/codisity.com/blob/main/docs/040-backend/080-continuous-integration-and-deployment/index.mdx",tags:[{label:"CI",permalink:"/tags/ci"},{label:"CD",permalink:"/tags/cd"}],version:"current",frontMatter:{tags:["CI","CD"]},sidebar:"backendSidebar",previous:{title:"Docker",permalink:"/backend/virtualization-and-containerization/docker/"},next:{title:"Search engines",permalink:"/backend/search-engines/"}},l={},p=[{value:"Links",id:"links",level:2}],c={toc:p},u="wrapper";function d(e){let{components:t,...n}=e;return(0,i.kt)(u,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"continuous-integration-and-deployment"},"Continuous integration and deployment"),(0,i.kt)("p",null,"Continuous Integration (CI) and Continuous Deployment (CD) are two closely related practices in software development that aim to improve the quality, speed, and reliability of delivering software updates. They involve automation, collaboration, and the frequent integration and delivery of code changes. Here's an explanation of both concepts:"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Continuous Integration (CI):")),(0,i.kt)("p",null,"Continuous Integration is a development practice in which developers frequently integrate their code changes into a shared repository (version control system like Git) and verify those changes through automated tests. The key elements of CI include:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Frequent Code Integration:")," Developers commit their code changes to a shared repository multiple times a day, ensuring that the codebase is continuously updated with the latest changes from team members.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Automated Builds:")," CI systems automatically trigger builds (compilation and assembly of code) whenever changes are pushed to the repository. This ensures that code can be built successfully and that no integration issues arise.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Automated Testing:")," CI pipelines include automated tests (unit tests, integration tests, and sometimes end-to-end tests) that validate the correctness and functionality of the code changes. If a test fails, developers are alerted to fix the issue immediately.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Code Quality Checks:")," CI systems often include code analysis tools that check for coding standards, style consistency, and potential code smells or vulnerabilities. These checks help maintain code quality.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Immediate Feedback:")," CI provides immediate feedback to developers. If a code change breaks the build or fails tests, developers can identify and fix the problem right away, reducing the likelihood of integration issues and regressions.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Artifact Generation:")," CI systems can generate deployable artifacts, such as binaries or container images, that are ready for further testing and deployment."))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Continuous Deployment (CD):")),(0,i.kt)("p",null,"Continuous Deployment is an extension of CI that goes a step further by automatically deploying code changes to production or staging environments after successful integration and testing. The key elements of CD include:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Automated Deployment:")," After code changes pass all automated tests and checks in the CI pipeline, CD systems automatically deploy the changes to a production environment without manual intervention.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Deployment Pipelines:")," CD pipelines define the stages and environments through which code changes must pass before reaching production. Common stages include development, testing, staging, and production.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Rollback Mechanisms:")," CD systems include rollback mechanisms that allow for quick and automated rollback to a previous stable version in case issues are detected in production.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Monitoring and Telemetry:")," Continuous Deployment involves continuous monitoring of deployed applications to detect issues, performance bottlenecks, or errors in real-time. Monitoring tools provide insights into application health.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Feature Flags and A/B Testing:")," CD enables feature flags and A/B testing, allowing developers to release new features to a subset of users for testing and gradual rollout."))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"CI/CD Benefits:")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Faster Delivery:")," CI/CD practices automate repetitive tasks, speeding up the development and deployment process."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Reduced Errors:")," Automation reduces the likelihood of human error in deployment."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Higher Quality:")," Frequent testing and feedback improve code quality."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Increased Collaboration:")," Developers work more closely together, leading to better communication and collaboration."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Quick Issue Identification:")," CI/CD helps identify and fix issues early in the development cycle."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Enhanced Agility:")," Organizations can respond quickly to changing requirements and market demands.")),(0,i.kt)("p",null,"CI/CD practices have become essential in modern software development, enabling teams to deliver software updates more reliably and rapidly, ultimately resulting in better user experiences and business outcomes."),(0,i.kt)("h2",{id:"links"},"Links"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/CI/CD"},"CI/CD - Wikipedia")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Continuous_integration"},"Continuous integration - Wikipedia")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Continuous_delivery"},"Continuous delivery - Wikipedia")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Continuous_deployment"},"Continuous deployment - Wikipedia")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.redhat.com/en/topics/devops/what-is-ci-cd"},"What is CI/CD?")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://resources.github.com/ci-cd/"},"Continuous Integration and Continuous Delivery (CI/CD) Fundamentals | GitHub Resources")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.atlassian.com/software/bamboo"},"Bamboo Continuous Integration and Deployment Build Server")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.travis-ci.com/pricing-cloud"},"Cloud Pricing \u2013 Travis-CI")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://docs.gitlab.com/ee/ci/"},"GitLab CI/CD | GitLab")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/features/actions"},"Features \u2022 GitHub Actions")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.jenkins.io/doc/book/pipeline/"},"Pipeline"))))}d.isMDXComponent=!0}}]);